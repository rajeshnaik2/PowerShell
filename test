
























blob-storage-container-Prod-inbox.ps1                                                                                                                                          blob-storage-container-Prod.ps1                                                                                                                                                blob-storage-container-test.ps1                                                                                                                                                blob-storage-container.ps1                                                                                                                                                     blob-storage-container1.ps1                                                                                                                                                    discover-storage-test.ps1                                                                                                                                                      discovery-storage-test.ps1                                                                                                                                                     get-blob-container-blob-count.ps1                                                                                                                                              #####blob-storage-container-Prod.ps1   #Storage account name = mobileapiipp001#Primary access key = adfasdfa #Secondary access key = adfadfasdf#Primary connection string = DefaultEndpointsProtocol=https;AccountName=mobileapiipp001;AccountKey=adfasdf#Secondary connection string = DefaultEndpointsProtocol=https;AccountName=mobileapiipp001;AccountKey=adfadf#begin# Update with the name of your subscription.$SubscriptionName="CE Ticketing App Production"   #asdfasdfasdf# Give a name to your new storage account. It must be lowercase!$StorageAccountName="mobileapiprod001"# Choose "West US" as an example.$Location = "Default-Storage-NorthEurope"# Give a name to your new container.#$ContainerName = "processed"$ContainerName = "error"# Add your Azure account to the local PowerShell environment.#Add-AzureAccount# Set a default Azure subscription.Select-AzureSubscription -SubscriptionName $SubscriptionName –Default# List all blobs in a container.#Get-AzureSubscription | Format-Table SubscriptionName, IsDefault, IsCurrent, CurrentStorageAccountName#Get-AzureStorageBlob -Container $ContainerName# Get a reference to a list of all blobs in a container.#Get-AzureStorageBlob -Container $ContainerName#Get-Command -Module Azure -Noun *Storage*#Get-AzureSubscription –Current#Get-AzureStorageAccount | Format-Table -Property StorageAccountName, Location, AccountType, StorageAccountStatus#Define the storage account and context.$StorageAccountKey = adfasdfas$Ctx = New-AzureStorageContext -StorageAccountName $StorageAccountName -StorageAccountKey $StorageAccountKey#$BlobName = "yourblobname"#List all blobs in a container.#Get-AzureStorageBlob -Container $ContainerName -Context $Ctx | select Name,LastModified#write-host $blobs#Get-AzureStorageFile -Container $ContainerName -Context $Ctx#Get-AzureStorageBlob -Container $ContainerName -Context $Ctx | select Name,LastModified(Get-AzureStorageBlob -Container $ContainerName -Context $Ctx).countblob-storage-container.ps1param($username,$FilePath) #$pusername ="asdfasdfasdf"#$puserpassword = "adfasdfs"#$AzureUserSPN = "adfasdfs"#$AzurePassSPN = "adfasdfsdfasdf"#$FilePath = "C:\scripts\LOGIN\SPN-TEST.bin"$securePassword = ConvertTo-SecureString (Get-Content -Path $FilePath)$cred = New-Object -TypeName System.Management.Automation.PSCredential ($username, $securePassword)#$cred = New-Object -TypeName System.Management.Automation.PSCredential ($pusername, $puserpassword)#$mycreds = New-Object System.Management.Automation.PSCredential   ($creds)#ProductionTenant#Login-AzureRmAccount -ServicePrincipal -Tenant asdfasdfadsf2324234234 -Credential $mycreds#Test TenantLogin-AzureRmAccount -ServicePrincipal -Tenant dfasdfasdfadsfasdfsd -Credential $cred#Storage account name = mobileapiipp001#Primary access key = asdfasdfasdfasdfasdfas#Secondary access key = asdfsdfsdf#Primary connection string = DefaultEndpointsProtocol=https;AccountName=mobileapiipp001;AccountKey=afadfsadfasdf#Secondary connection string = DefaultEndpointsProtocol=https;AccountName=mobileapiipp001;AccountKey=adfasdfasdfasdfsaf#begin# Update with the name of your subscription.$SubscriptionName="CE Mobile Test"   #asdfsdfasdf# Give a name to your new storage account. It must be lowercase!$StorageAccountName="mobileapiipp001"# Choose "West US" as an example.$Location = "North Europe"# Give a name to your new container.#$ContainerName = "processed"$ContainerName = "error"# Add your Azure account to the local PowerShell environment.#Add-AzureAccount# Set a default Azure subscription.#Select-AzureSubscription -SubscriptionName $SubscriptionName –Default# List all blobs in a container.#Get-AzureSubscription | Format-Table SubscriptionName, IsDefault, IsCurrent, CurrentStorageAccountName#Get-AzureStorageBlob -Container $ContainerName# Get a reference to a list of all blobs in a container.#Get-AzureStorageBlob -Container $ContainerName#Get-Command -Module Azure -Noun *Storage*#Get-AzureSubscription –Current#Get-AzureStorageAccount | Format-Table -Property StorageAccountName, Location, AccountType, StorageAccountStatus#Define the storage account and context.$StorageAccountKey = "sdfasdfasdfsafsda"$Ctx = New-AzureStorageContext -StorageAccountName $StorageAccountName -StorageAccountKey $StorageAccountKey#$BlobName = "yourblobname"#List all blobs in a container.$blobs = Get-AzureStorageBlob -Container $ContainerName -Context $Ctx | select Name,LastModifiedwrite-host $blobs.count#(Get-AzureStorageBlob -Container $ContainerName -Context $Ctx).count#write-host $blobs#Get-AzureStorageFile -Container $ContainerName -Context $Ctxencrypt-SPN-azure-account-Production.ps1                                                                                                                                       $MyAzureName = "asdfasdfsadf"$secure = Read-Host -AsSecureString -Prompt "Enter your Azure Service Principle Key:"$FilePath = "C:\scripts\login\azure-SPN-Prod.bin"ConvertFrom-SecureString -SecureString $secure | Out-File -FilePath $FilePath$cred = New-Object -TypeName System.Management.Automation.PSCredential ($MyAzureName, $secure)$result = Login-AzureRmAccount -ServicePrincipal -Tenant "adfasdfasdfasdf" -Credential $cred# Check the current subscription.#$proxy = [System.Net.WebRequest]::DefaultWebProxy.Credentials = [System.Net.CredentialCache]::DefaultCredentials$SubscriptionName = "CE Ticketing App Production"Select-AzureSubscription -SubscriptionName $SubscriptionName –DefaultGet-AzureSubscription –Current                                                                                                                                  encrypt-user-p-azure-account.ps1                                                                                                                                          $MyAzureName = "raj@test.uk"$secure = Read-Host -AsSecureString -Prompt "Enter your Azure organization ID password."$FilePath = "C:\scripts\login\azure-secureid-PA1.bin"ConvertFrom-SecureString -SecureString $secure | Out-File -FilePath $FilePath$AzureRMCredential= New-Object -TypeName System.Management.Automation.PSCredential ($MyAzureName, $secure)$result = Add-AzureAccount -Credential $cred# Check the current subscription.Get-AzureSubscription –Currentencrypt-SPN-azure-account-CE Mobile Test.ps1  $MyAzureName = "adfasdfasdfdasfasdf"$secure = Read-Host -AsSecureString -Prompt "Enter your Azure Service Principle Key:"$FilePath = "C:\scripts\login\azure-SPN-test.bin"#D:\Azure\loginConvertFrom-SecureString -SecureString $secure | Out-File -FilePath $FilePath$cred = New-Object -TypeName System.Management.Automation.PSCredential ($MyAzureName, $secure)$result = Add-AzureAccount -Credential $cred# Check the current subscription.Set-AzureSubscription -SubscriptionName "CE Mobile Test"#Install-Package WindowsAzure.ServiceBusparam($namespaceName, $password, $assemblyLocation)$api = New-Object -comObject 'MOM.ScriptAPI'$api.LogScriptEvent("QueueDiscovery1.ps1",100,4,"Starting queue discovery for azure service bus namespace ${namespaceName}")[Void][System.Reflection.Assembly]::LoadWithPartialName("System")[Void][System.Reflection.Assembly]::LoadFile($assemblyLocation)$conn = "Endpoint=sb://" + $namespaceName + "/;SharedAccessKeyName=RootManageSharedAccessKey;SharedAccessKey=" + $password      $bag = $api.CreatePropertyBag()$namespaceManager = [Microsoft.ServiceBus.NamespaceManager]::CreateFromConnectionString($conn)$queues = $namespaceManager.GetQueues()foreach($s in $queues) { $api.LogScriptEvent("QueueDiscovery1.ps1",101,4,"Discovered queue $($s.Path) in namespace ${namespaceName}") $bag = $api.CreatePropertyBag() $bag.AddValue("QueueName", $s.Path)      $bag.AddValue("MaxSizeInMegaBytes", $s.MaxSizeInMegabytes)   $bag    "Service Bus Queue Name $s.Path"    "Service MaxSizeInMegaBytes $s.MaxSizeInMegabytes" $success = $true}  if($success){ $api.LogScriptEvent("QueueDiscovery1.ps1",102,4,"Completed queue discovery for azure service bus namespace ${namespaceName}")}if (($Error.Count -gt 0) -and ($success -eq $false)) {   $api.LogScriptEvent("QueueDiscovery1.ps1",105,1,"The following Errors occured while trying to discover the Windows Azure Service Bus namespace on Namespace ${namespaceName}: " + $Error[0]) }blob-storage-containter-prod.ps1param($username,$FilePath) #$pusername ="asdfasdfasdf"#$puserpassword = "sdfasdfsadfasdf"#$AzureUserSPN = "sdfasdfasdfas"#$AzurePassSPN = "sdfasd"#$FilePath = "C:\scripts\LOGIN\SPN-TEST.bin"$securePassword = ConvertTo-SecureString (Get-Content -Path $FilePath)$cred = New-Object -TypeName System.Management.Automation.PSCredential ($username, $securePassword)#$cred = New-Object -TypeName System.Management.Automation.PSCredential ($pusername, $puserpassword)#$mycreds = New-Object System.Management.Automation.PSCredential   ($creds)#ProductionTenant#Login-AzureRmAccount -ServicePrincipal -Tenant dfasdfasdf -Credential $mycreds#Test TenantLogin-AzureRmAccount -ServicePrincipal -Tenant asdfasdfsfsadf -Credential $cred#Storage account name = mobileapiipp001#Primary access key = adfsadfsadf#Secondary access key = dfasdfasdf#Primary connection string = DefaultEndpointsProtocol=https;AccountName=mobileapiipp001;AccountKey=adfasdfsa#Secondary connection string = DefaultEndpointsProtocol=https;AccountName=mobileapiipp001;AccountKey=afasdfasdfasf#begin# Update with the name of your subscription.$SubscriptionName="CE Mobile Test"   #sdfasdfsafasdfsdfs# Give a name to your new storage account. It must be lowercase!$StorageAccountName="mobileapiipp001"# Choose "West US" as an example.$Location = "North Europe"# Give a name to your new container.#$ContainerName = "processed"$ContainerName = "error"# Add your Azure account to the local PowerShell environment.#Add-AzureAccount# Set a default Azure subscription.#Select-AzureSubscription -SubscriptionName $SubscriptionName –Default# List all blobs in a container.#Get-AzureSubscription | Format-Table SubscriptionName, IsDefault, IsCurrent, CurrentStorageAccountName#Get-AzureStorageBlob -Container $ContainerName# Get a reference to a list of all blobs in a container.#Get-AzureStorageBlob -Container $ContainerName#Get-Command -Module Azure -Noun *Storage*#Get-AzureSubscription –Current#Get-AzureStorageAccount | Format-Table -Property StorageAccountName, Location, AccountType, StorageAccountStatus#Define the storage account and context.$StorageAccountKey = "asdfasdfsadfasdfasdf"$Ctx = New-AzureStorageContext -StorageAccountName $StorageAccountName -StorageAccountKey $StorageAccountKey#$BlobName = "yourblobname"#List all blobs in a container.$blobs = Get-AzureStorageBlob -Container $ContainerName -Context $Ctx | select Name,LastModifiedwrite-host $blobs.count#(Get-AzureStorageBlob -Container $ContainerName -Context $Ctx).countGet-AzureStorageServiceMetricsProperty -MetricsType Hour -ServiceType Blob #write-host $blobs#Get-AzureStorageFile -Container $ContainerName -Context $Ctx#Discover all containersparam($username,$FilePath,$StorageAccountName,$tenantid) $securePassword = ConvertTo-SecureString (Get-Content -Path $FilePath)$cred = New-Object -TypeName System.Management.Automation.PSCredential ($username, $securePassword)Login-AzureRmAccount -ServicePrincipal -Tenant $tenantid -Credential $credGet-AzureStorageAccount | Select StorageAccountName, GeoPrimaryLocationexit$SubscriptionName="CE Mobile Test"   # Give a name to your new storage account. It must be lowercase!#$StorageAccountName="mobileapiipp001"# Choose "West US" as an example.$Location = "North Europe"#$context = New-AzureStorageContext -StorageAccountName myStorageAccount -StorageAccountKey xxx$StorageAccountKey = "sdfasdfasdfsadfsad"$Ctx = New-AzureStorageContext -StorageAccountName $StorageAccountName -StorageAccountKey $StorageAccountKey$stgcontainers = Get-AzureStorageContainer -Context $ctxwrite-host $stgcontainers.Namewrite-host $stgcontainers.LastModified#.\discover-storage-test.ps1 "dfasdfasdfas" "C:\scripts\LOGIN\SPN-TEST.bin" "mobileapiipp001" "dfasdfasdfsad"$creds = Get-Credential -UserName sdfasdf -Message 'enter pwd'Login-AzureRmAccount -Credential $creds -ServicePrincipal -Tenant (Get-AzureRmContext).Tenant.TenantId -SubscriptionId 'dfasfasd' $SubscriptionName="CE Mobile Test"   #adfasdfasdf$StorageAccountName="mobileapiipp001"$Location = "North Europe"$ContainerName = "error"$StorageAccountKey = "asdfasdfasdfas"$Ctx = New-AzureStorageContext -StorageAccountName $StorageAccountName -StorageAccountKey $StorageAccountKey$blobs = Get-AzureStorageBlob -Container $ContainerName -Context $Ctx | select Name,LastModifiedwrite-host $blobs.countblob-storage-container-Prod-inbox#Storage account name = mobileapiipp001#Primary access key = adfasdfas#Secondary access key = sdfasdfsadf#Primary connection string = DefaultEndpointsProtocol=https;AccountName=mobileapiipp001;AccountKey=adfasdf#Secondary connection string = DefaultEndpointsProtocol=https;AccountName=mobileapiipp001;AccountKey=asdfasdfas#begin# Update with the name of your subscription.$SubscriptionName="CE Ticketing App Production"   #asdfsadfsadfsdf# Give a name to your new storage account. It must be lowercase!$StorageAccountName="mobileapiprod001"# Choose "West US" as an example.$Location = "Default-Storage-NorthEurope"# Give a name to your new container.#$ContainerName = "processed"#$ContainerName = "error"$ContainerName = "inbox"# Add your Azure account to the local PowerShell environment.#Add-AzureAccount# Set a default Azure subscription.Select-AzureSubscription -SubscriptionName $SubscriptionName –Default# List all blobs in a container.#Get-AzureSubscription | Format-Table SubscriptionName, IsDefault, IsCurrent, CurrentStorageAccountName#Get-AzureStorageBlob -Container $ContainerName# Get a reference to a list of all blobs in a container.#Get-AzureStorageBlob -Container $ContainerName#Get-Command -Module Azure -Noun *Storage*#Get-AzureSubscription –Current#Get-AzureStorageAccount | Format-Table -Property StorageAccountName, Location, AccountType, StorageAccountStatus#Define the storage account and context.$StorageAccountKey = "sdfasdfasdfasd"$Ctx = New-AzureStorageContext -StorageAccountName $StorageAccountName -StorageAccountKey $StorageAccountKey#$BlobName = "yourblobname"#List all blobs in a container.#Get-AzureStorageBlob -Container $ContainerName -Context $Ctx | select Name,LastModified#write-host $blobs#Get-AzureStorageFile -Container $ContainerName -Context $Ctx#Get-AzureStorageBlob -Container $ContainerName -Context $Ctx | select Name,LastModified$stgcontainers = Get-AzureStorageContainer -Context $ctxwrite-host $stgcontainers.Name - listwrite-host $stgcontainers.LastModified(Get-AzureStorageBlob -Container $ContainerName -Context $Ctx).count=======================$monobj1 = Get-SCOMClass -displayname  "Microsoft Azure Insights Alert Rule"  | Get-SCOMClassInstance  | where-object  { $_.DisplayName -eq "CE AI Mobileapi APIExcp W Mon (microsoft.insights/alertrules)" }$monobj1.HealthState$monobj2 = Get-SCOMClass -displayname  "Microsoft Azure Insights Alert Rule"  | Get-SCOMClassInstance  | where-object  { $_.DisplayName -eq "CE AI Mobileapi APIExcp C Mon (microsoft.insights/alertrules)" }$monobj2.HealthState$desc1 = $monobj1 | select values$arr1 = $desc1.Values | select Type, Value$arr1[1].Value#Success#Error ===============================force scom discovery – not working. Have a look later$t=get-scomtask -name Microsoft.SystemCenter.TriggerOnDemandDiscovery$d=get-scomdiscovery -name All.Microsoft.Azure.Monitored.Resources.Group.Populator$o=@{DiscoveryId=$d.id.tostring();TargetInstanceId=$d.target.id.tostring()}$i=get-scomclass -name Microsoft.SystemCenter.ManagementServer | get-scomclassinstance | ?{$_.displayname –eq ’MDANESCO002.mobile.tfl.local’}start-scomtask -task $t -instance $i -override $o  
